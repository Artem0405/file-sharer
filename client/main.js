// client/main.js

// --- 1. –ü–û–ò–°–ö –≠–õ–ï–ú–ï–ù–¢–û–í –ù–ê –°–¢–†–ê–ù–ò–¶–ï ---
// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —ç–ª–µ–º–µ–Ω—Ç—ã DOM –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
// –≠—Ç–æ –ª—É—á—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞, —á–µ–º –∏—Å–∫–∞—Ç—å –∏—Ö –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ.
const uploadForm = document.getElementById('uploadForm');
const fileInput = document.getElementById('fileInput');
const fileInputLabel = document.querySelector('.file-input-label'); // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Å—Ç–æ–º–Ω—ã–π label
const submitButton = document.getElementById('submitButton');

const statusContainer = document.getElementById('statusContainer');
const progressBar = document.getElementById('progressBar');
const statusText = document.getElementById('statusText');

const resultContainer = document.getElementById('resultContainer');
const downloadLink = document.getElementById('downloadLink');
const copyButton = document.getElementById('copyButton');

// URL –Ω–∞—à–µ–≥–æ API. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.
const API_URL = 'http://localhost:3000/api/files/upload';


// --- 2. –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–õ–£–®–ê–¢–ï–õ–ï–ô –°–û–ë–´–¢–ò–ô ---

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
uploadForm.addEventListener('submit', handleUpload);

// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞, –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω
fileInput.addEventListener('change', updateFileInputLabel);

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å"
copyButton.addEventListener('click', copyLinkToClipboard);


// --- 3. –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –§–£–ù–ö–¶–ò–ô ---

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.
 * @param {Event} e - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã.
 */
async function handleUpload(e) {
  e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

  const file = fileInput.files[0];
  if (!file) {
    showStatus('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.', 'error');
    return;
  }

  // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –Ω–∞ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
  setFormDisabled(true);
  showResult(false);
  showStatus('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å...', 'info');

  const formData = new FormData();
  formData.append('file', file);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º XMLHttpRequest –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const xhr = new XMLHttpRequest();

  xhr.open('POST', API_URL, true);

  // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  xhr.upload.onprogress = function(event) {
    if (event.lengthComputable) {
      const percentComplete = (event.loaded / event.total) * 100;
      updateProgress(percentComplete);
      statusText.textContent = `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${Math.round(percentComplete)}%`;
    }
  };

  // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
  xhr.onload = function() {
    setFormDisabled(false); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É
    updateProgress(100);

    if (xhr.status === 201) {
      const response = JSON.parse(xhr.responseText);
      showStatus('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', 'success');
      showResult(true, response.downloadLink);
    } else {
      const errorResponse = JSON.parse(xhr.responseText);
      showStatus(`‚ùå –û—à–∏–±–∫–∞: ${errorResponse.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª.'}`, 'error');
    }
  };

  // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏
  xhr.onerror = function() {
    setFormDisabled(false);
    showStatus('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.', 'error');
  };

  xhr.send(formData);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞.
 */
function updateFileInputLabel() {
    const fileName = fileInput.files[0]?.name;
    if (fileName) {
        fileInputLabel.textContent = fileName;
    } else {
        fileInputLabel.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª...';
    }
}

/**
 * –ö–æ–ø–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.
 */
function copyLinkToClipboard() {
    downloadLink.select();
    document.execCommand('copy');
    copyButton.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!';
    setTimeout(() => {
        copyButton.textContent = '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å';
    }, 2000);
}

// --- 4. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï UI-–§–£–ù–ö–¶–ò–ò ---

/**
 * –ë–ª–æ–∫–∏—Ä—É–µ—Ç –∏–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º—É.
 * @param {boolean} disabled - –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
 */
function setFormDisabled(disabled) {
  fileInput.disabled = disabled;
  submitButton.disabled = disabled;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–æ—Å—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
 * @param {number} value - –ó–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Ç 0 –¥–æ 100.
 */
function updateProgress(value) {
  progressBar.style.width = `${value}%`;
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
 * @param {boolean} visible - –í–∏–¥–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.
 * @param {string} [link] - –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.
 */
function showResult(visible, link = '') {
  if (visible) {
    downloadLink.value = link;
    resultContainer.classList.remove('hidden');
  } else {
    resultContainer.classList.add('hidden');
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ.
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @param {'info'|'success'|'error'} type - –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å).
 */
function showStatus(message, type) {
  statusText.textContent = message;
  statusContainer.classList.remove('hidden');
}